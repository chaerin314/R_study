1+1
1+1
1+1
100/3
100/3
1+1
1+1
1+1
install.packages('dplyr')
install.packages('ggplot2')
setwd('C:/Users/dnflc/Desktop/데이터 분석을 위한 R 프로그래밍')
getwd()
library(dplyr)
library(ggplot2)
str(mtcars)
head(mtcars)
cars <- mtcars
cars <- mtcars
cars$am <- ifelse(cars$am==0, '자동', '수동') # ifelse(조건,T,F)
cars$am
cars %>%
group_by(am) %>%   # am 변수에 따라 데이터 나눔
summarise(연비평균=mean(mpg))
cars <- mtcars
cars$am <- ifelse(cars$am==0, '자동', '수동')   # ifelse(조건,T,F)
cars %>%
group_by(am)
%>%   # am 변수에 따라 데이터 나눔
summarise(연비평균=mean(mpg))
cars <- mtcars
cars$am <- ifelse(cars$am==0, '자동', '수동')   # ifelse(조건,T,F)
cars %>%
group_by(am) %>%   # am 변수에 따라 데이터 나눔
summarise(연비평균=mean(mpg)) %>%   # mpg 평균 계산
ggplot(aes(x=am, y=연비평균))
cars <- mtcars
cars$am <- ifelse(cars$am==0, '자동', '수동')   # ifelse(조건,T,F)
cars %>%
group_by(am) %>%   # am 변수에 따라 데이터 나눔
summarise(연비평균=mean(mpg)) %>%   # mpg 평균 계산
ggplot(aes(x=am, y=연비평균)) +
geom_col(fill=c(3,4))
cars %>%
group_by(am) %>%   # am 변수에 따라 데이터 나눔
summarise(연비평균=mean(mpg)) %>%   # mpg 평균 계산
ggplot(aes(x=am, y=연비평균)) +
geom_col(fill=c(3,4)) +   # 막대그래프 작성
labs(title="기어종류에 따른 연비", x="기어종류", y="연비평균")
mtcars %>%
ggplot(aes(x=mpg))
mtcars %>%
ggplot(aes(x=mpg))+
geom_histogram(binwidth=2, color="black", fill="gray")
mtcars %>%
ggplot(aes(x=mpg))+
geom_histogram(binwidth=5, color="black", fill="gray")
cars %>%
group_by(am) %>%   # am 변수에 따라 데이터 나눔
summarise(연비평균=mean(mpg)) %>%   # mpg 평균 계산
ggplot(aes(x=am, y=연비평균)) +
geom_col(fill=c(1,4))
cars <- mtcars
cars$am <- ifelse(cars$am==0, '자동', '수동')   # ifelse(조건,T,F)
cars %>%
group_by(am) %>%   # am 변수에 따라 데이터 나눔
summarise(연비평균=mean(mpg)) %>%   # mpg 평균 계산
ggplot(aes(x=am, y=연비평균)) +
geom_col(fill=c(1,2))
cars %>%
group_by(am) %>%   # am 변수에 따라 데이터 나눔
summarise(연비평균=mean(mpg)) %>%   # mpg 평균 계산
ggplot(aes(x=am, y=연비평균)) +
geom_col(fill=c(2,3))
cars %>%
group_by(am) %>%   # am 변수에 따라 데이터 나눔
summarise(연비평균=mean(mpg)) %>%   # mpg 평균 계산
ggplot(aes(x=am, y=연비평균)) +
geom_col(fill=c(4,5))
mtcars %>%
ggplot(aes(x=mpg))
mtcars %>%
ggplot(aes(x=mpg))+
geom_histogram(binwidth=2, color="black", fill="gray") +
geom_vline(aes(xinterupt=mean(mpg)), linetype="dashed")
mtcars %>%
ggplot(aes(x=mpg))+
geom_histogram(binwidth=2, color="black", fill="gray") +
geom_vline(aes(xintercept=mean(mpg)), linetype="dashed")
mtcars %>%
ggplot(aes(x=mpg))+
geom_histogram(binwidth=2, color="black", fill="gray") +
geom_vline(aes(xintercept=mean(mpg)), linetype="dashed") +   # 세로선
labs(title="Histogram of mpg", x="mpg (Miles/(US) gallon", y="frequency")
cars <- mtcars
cars$am <- ifelse(cars$am==0, '자동', '수동')   # ifelse(조건,T,F)
cars %>%
group_by(am) %>%   # am 변수에 따라 데이터 나눔
summarise(연비평균=mean(mpg)) %>%   # mpg 평균 계산
ggplot(aes(x=am, y=연비평균)) +   # x, y축만 생김
geom_col(fill=c(3,4)) +   # 막대그래프 작성(fill은 색상 번호)
labs(title="기어종류에 따른 연비", x="기어종류", y="연비평균")   # labels
install.packages('GGally')
# 기어(자동/수동), 연비, 배기량 간 관계
library(GGally)
ggpairs(cars, columns=c('mpg', 'disp', 'am'), title='correlation matrix')   # 두개씩 묶어서 3가지의 관련성을 찾음
cars <- mtcars
cars$am <- ifelse(cars$am==0, '자동', '수동')   # ifelse(조건,T,F)
cars %>%
group_by(am)
getwd()
setwd('C:/Users/dnflc/Desktop/데이터 분석을 위한 R 프로그래밍')
setwd('C:/Users/dnflc/Desktop/데이터_분석을_위한_R_프로그래밍')
# 기어(자동/수동) 방식에 따른 연비 평균 막대그래프
cars <- mtcars
cars$am <- ifelse(cars$am==0, '자동', '수동')   # ifelse(조건,T,F)
cars %>%
group_by(am)
library(dplyr)
library(ggplot2)
# 기어(자동/수동) 방식에 따른 연비 평균 막대그래프
cars <- mtcars
cars$am <- ifelse(cars$am==0, '자동', '수동')   # ifelse(조건,T,F)
cars %>%
group_by(am)
head(mtcars)
cars <- mtcars
cars$am <- ifelse(cars$am==0, '자동', '수동')   # ifelse(조건,T,F)
cars %>%
group_by(am)
setwd('C:/Users/dnflc/Desktop/데이터_분석을_위한_R_프로그래밍')
boxplot(cars$dist)
str(cars)
cars
cars
View(cars)
View(cars)
